name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  issues: read
  checks: write
  pull-requests: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'
        
    - name: Install tmux
      run: sudo apt-get update && sudo apt-get install -y tmux
        
    - name: Run tests
      run: ./bin/task test-all
      
    - name: Build
      run: ./bin/task build

  release:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'
        
    - name: Get next version
      id: version
      run: |
        CURRENT=$(git tag --list | grep -E '^v[0-9]+' | sort -V | tail -n1 || echo "")
        NEXT=$(./bin/svu next)
        echo "current=${CURRENT}" >> $GITHUB_OUTPUT
        echo "next=${NEXT}" >> $GITHUB_OUTPUT
        echo "should_release=$([[ "${CURRENT}" != "${NEXT}" ]] && echo "true" || echo "false")" >> $GITHUB_OUTPUT
        
    - name: Create release
      if: steps.version.outputs.should_release == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Build cross-platform binaries
        ./bin/task release-binaries
        
        # Create GitHub release
        gh release create ${{ steps.version.outputs.next }} \
          --title "Release ${{ steps.version.outputs.next }}" \
          --notes "Automated release created from commit ${{ github.sha }}" \
          tmux-mcp-server-linux-amd64 \
          tmux-mcp-server-linux-arm64 \
          tmux-mcp-server-darwin-amd64 \
          tmux-mcp-server-darwin-arm64
